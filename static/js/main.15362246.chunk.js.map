{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["weatherAPIKey","App","props","state","time","data","forecast","currentTemp","currentWeather","currentHumidity","currentIcon","metric","country","city","sunrise","sunset","handleUnitsChange","bind","getCurrentData","dt","Date","URL","$","ajax","url","dataType","success","setState","main","temp","weather","humidity","icon","sys","name","timefy","UTX","getHours","getMinutes","error","alert","getJSON","response","this","timer","setInterval","today","currentTime","getSeconds","navigator","geolocation","getCurrentPosition","pos","longitude","coords","latitude","currentURL","forecastURL","getForecastData","err","console","warn","code","message","location","prompt","enableHighAccuracy","timeout","maximumAge","document","querySelector","style","border","clearInterval","backgroundImage","clear","id","className","clock","list","slice","React","Component","CurrentWeather","parseInt","src","alt","City","DateTime","toString","Forecast","map","item","index","key","description","Units","type","onClick","Footer","href","Boolean","window","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15362246.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport './App.css';\r\n\r\nconst weatherAPIKey = \"6699a3d1a9a5f8d5601c709abecd832f\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: \"-- : --\",\r\n            data: { \"coord\": { \"lon\": 90.41, \"lat\": 23.71 }, \"weather\": [{ \"id\": 721, \"main\": \"Haze\", \"description\": \"haze\", \"icon\": \"50n\" }], \"base\": \"stations\", \"main\": { \"temp\": 301.15, \"pressure\": 1013, \"humidity\": 83, \"temp_min\": 301.15, \"temp_max\": 301.15 }, \"visibility\": 4000, \"wind\": { \"speed\": 2.6, \"deg\": 120 }, \"clouds\": { \"all\": 75 }, \"dt\": 1570553380, \"sys\": { \"type\": 1, \"id\": 9145, \"message\": 0.006, \"country\": \"BD\", \"sunrise\": 1570492338, \"sunset\": 1570534775 }, \"timezone\": 21600, \"id\": 1185241, \"name\": \"Dhaka\", \"cod\": 200 },\r\n            forecast: { \"cod\": \"200\", \"message\": 0.0074, \"cnt\": 40, \"list\": [{ \"dt\": 1570590000, \"main\": { \"temp\": 32.08, \"temp_min\": 28.43, \"temp_max\": 32.08, \"pressure\": 1011.79, \"sea_level\": 1011.79, \"grnd_level\": 1011.42, \"humidity\": 72, \"temp_kf\": 3.65 }, \"weather\": [{ \"id\": 804, \"main\": \"Clouds\", \"description\": \"overcast clouds\", \"icon\": \"04d\" }], \"clouds\": { \"all\": 95 }, \"wind\": { \"speed\": 2.13, \"deg\": 118.392 }, \"sys\": { \"pod\": \"d\" }, \"dt_txt\": \"2019-10-09 03:00:00\" }, { \"dt\": 1570600800, \"main\": { \"temp\": 34.37, \"temp_min\": 31.63, \"temp_max\": 34.37, \"pressure\": 1009.98, \"sea_level\": 1009.98, \"grnd_level\": 1009.47, \"humidity\": 53, \"temp_kf\": 2.74 }, \"weather\": [{ \"id\": 500, \"main\": \"Rain\", \"description\": \"light rain\", \"icon\": \"10d\" }], \"clouds\": { \"all\": 87 }, \"wind\": { \"speed\": 2.24, \"deg\": 191.872 }, \"rain\": { \"3h\": 1.625 }, \"sys\": { \"pod\": \"d\" }, \"dt_txt\": \"2019-10-09 06:00:00\" }, { \"dt\": 1570611600, \"main\": { \"temp\": 31.69, \"temp_min\": 29.87, \"temp_max\": 31.69, \"pressure\": 1006.77, \"sea_level\": 1006.77, \"grnd_level\": 1006.79, \"humidity\": 64, \"temp_kf\": 1.82 }, \"weather\": [{ \"id\": 500, \"main\": \"Rain\", \"description\": \"light rain\", \"icon\": \"10d\" }], \"clouds\": { \"all\": 76 }, \"wind\": { \"speed\": 4.08, \"deg\": 330.717 }, \"rain\": { \"3h\": 2.562 }, \"sys\": { \"pod\": \"d\" }, \"dt_txt\": \"2019-10-09 09:00:00\" }, { \"dt\": 1570622400, \"main\": { \"temp\": 26.59, \"temp_min\": 25.68, \"temp_max\": 26.59, \"pressure\": 1006.52, \"sea_level\": 1006.52, \"grnd_level\": 1007.01, \"humidity\": 84, \"temp_kf\": 0.91 }, \"weather\": [{ \"id\": 500, \"main\": \"Rain\", \"description\": \"light rain\", \"icon\": \"10n\" }], \"clouds\": { \"all\": 79 }, \"wind\": { \"speed\": 2.55, \"deg\": 22.365 }, \"rain\": { \"3h\": 1.188 }, \"sys\": { \"pod\": \"n\" }, \"dt_txt\": \"2019-10-09 12:00:00\" }, { \"dt\": 1570633200, \"main\": { \"temp\": 25.72, \"temp_min\": 25.72, \"temp_max\": 25.72, \"pressure\": 1008.81, \"sea_level\": 1008.81, \"grnd_level\": 1009.02, \"humidity\": 78, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 500, \"main\": \"Rain\", \"description\": \"light rain\", \"icon\": \"10n\" }], \"clouds\": { \"all\": 58 }, \"wind\": { \"speed\": 1.81, \"deg\": 75.856 }, \"rain\": { \"3h\": 0.562 }, \"sys\": { \"pod\": \"n\" }, \"dt_txt\": \"2019-10-09 15:00:00\" }, { \"dt\": 1570644000, \"main\": { \"temp\": 24.75, \"temp_min\": 24.75, \"temp_max\": 24.75, \"pressure\": 1008.19, \"sea_level\": 1008.19, \"grnd_level\": 1008.44, \"humidity\": 85, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 501, \"main\": \"Rain\", \"description\": \"moderate rain\", \"icon\": \"10n\" }], \"clouds\": { \"all\": 79 }, \"wind\": { \"speed\": 2.05, \"deg\": 45.554 }, \"rain\": { \"3h\": 5.688 }, \"sys\": { \"pod\": \"n\" }, \"dt_txt\": \"2019-10-09 18:00:00\" }, { \"dt\": 1570654800, \"main\": { \"temp\": 23.65, \"temp_min\": 23.65, \"temp_max\": 23.65, \"pressure\": 1007.67, \"sea_level\": 1007.67, \"grnd_level\": 1007.96, \"humidity\": 90, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 501, \"main\": \"Rain\", \"description\": \"moderate rain\", \"icon\": \"10n\" }], \"clouds\": { \"all\": 98 }, \"wind\": { \"speed\": 2.28, \"deg\": 64.267 }, \"rain\": { \"3h\": 5.562 }, \"sys\": { \"pod\": \"n\" }, \"dt_txt\": \"2019-10-09 21:00:00\" }, { \"dt\": 1570665600, \"main\": { \"temp\": 23.28, \"temp_min\": 23.28, \"temp_max\": 23.28, \"pressure\": 1008.98, \"sea_level\": 1008.98, \"grnd_level\": 1009.11, \"humidity\": 91, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 501, \"main\": \"Rain\", \"description\": \"moderate rain\", \"icon\": \"10d\" }], \"clouds\": { \"all\": 67 }, \"wind\": { \"speed\": 1.87, \"deg\": 74.707 }, \"rain\": { \"3h\": 3.813 }, \"sys\": { \"pod\": \"d\" }, \"dt_txt\": \"2019-10-10 00:00:00\" }, { \"dt\": 1570676400, \"main\": { \"temp\": 27.34, \"temp_min\": 27.34, \"temp_max\": 27.34, \"pressure\": 1011.31, \"sea_level\": 1011.31, \"grnd_level\": 1010.92, \"humidity\": 78, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 500, \"main\": \"Rain\", \"description\": \"light rain\", \"icon\": \"10d\" }], \"clouds\": { \"all\": 13 }, \"wind\": { \"speed\": 3.1, \"deg\": 70.594 }, \"rain\": { \"3h\": 2.125 }, \"sys\": { \"pod\": \"d\" }, \"dt_txt\": \"2019-10-10 03:00:00\" }, { \"dt\": 1570687200, \"main\": { \"temp\": 28.51, \"temp_min\": 28.51, \"temp_max\": 28.51, \"pressure\": 1009.41, \"sea_level\": 1009.41, \"grnd_level\": 1008.98, \"humidity\": 75, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 501, \"main\": \"Rain\", \"description\": \"moderate rain\", \"icon\": \"10d\" }], \"clouds\": { \"all\": 24 }, \"wind\": { \"speed\": 3.79, \"deg\": 58.79 }, \"rain\": { \"3h\": 8.687 }, \"sys\": { \"pod\": \"d\" }, \"dt_txt\": \"2019-10-10 06:00:00\" }, { \"dt\": 1570698000, \"main\": { \"temp\": 26.76, \"temp_min\": 26.76, \"temp_max\": 26.76, \"pressure\": 1006.7, \"sea_level\": 1006.7, \"grnd_level\": 1006.88, \"humidity\": 84, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 500, \"main\": \"Rain\", \"description\": \"light rain\", \"icon\": \"10d\" }], \"clouds\": { \"all\": 95 }, \"wind\": { \"speed\": 4.65, \"deg\": 66.884 }, \"rain\": { \"3h\": 2.438 }, \"sys\": { \"pod\": \"d\" }, \"dt_txt\": \"2019-10-10 09:00:00\" }, { \"dt\": 1570708800, \"main\": { \"temp\": 25.16, \"temp_min\": 25.16, \"temp_max\": 25.16, \"pressure\": 1006.81, \"sea_level\": 1006.81, \"grnd_level\": 1007.2, \"humidity\": 89, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 803, \"main\": \"Clouds\", \"description\": \"broken clouds\", \"icon\": \"04n\" }], \"clouds\": { \"all\": 67 }, \"wind\": { \"speed\": 3.34, \"deg\": 91.856 }, \"rain\": {}, \"sys\": { \"pod\": \"n\" }, \"dt_txt\": \"2019-10-10 12:00:00\" }, { \"dt\": 1570719600, \"main\": { \"temp\": 24.35, \"temp_min\": 24.35, \"temp_max\": 24.35, \"pressure\": 1008.35, \"sea_level\": 1008.35, \"grnd_level\": 1008.61, \"humidity\": 89, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 802, \"main\": \"Clouds\", \"description\": \"scattered clouds\", \"icon\": \"03n\" }], \"clouds\": { \"all\": 49 }, \"wind\": { \"speed\": 2.77, \"deg\": 94.184 }, \"sys\": { \"pod\": \"n\" }, \"dt_txt\": \"2019-10-10 15:00:00\" }, { \"dt\": 1570730400, \"main\": { \"temp\": 23.95, \"temp_min\": 23.95, \"temp_max\": 23.95, \"pressure\": 1008.49, \"sea_level\": 1008.49, \"grnd_level\": 1008.58, \"humidity\": 89, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 803, \"main\": \"Clouds\", \"description\": \"broken clouds\", \"icon\": \"04n\" }], \"clouds\": { \"all\": 73 }, \"wind\": { \"speed\": 2.34, \"deg\": 66.316 }, \"sys\": { \"pod\": \"n\" }, \"dt_txt\": \"2019-10-10 18:00:00\" }, { \"dt\": 1570741200, \"main\": { \"temp\": 23.47, \"temp_min\": 23.47, \"temp_max\": 23.47, \"pressure\": 1007.87, \"sea_level\": 1007.87, \"grnd_level\": 1007.95, \"humidity\": 90, \"temp_kf\": 0 }, \"weather\": [{ \"id\": 803, \"main\": \"Clouds\", \"description\": \"broken clouds\", \"icon\": \"04n\" }], \"clouds\": { \"all\": 76 }, \"wind\": { \"speed\": 2.81, \"deg\": 50.798 }, \"sys\": { \"pod\": \"n\" }, \"dt_txt\": \"2019-10-10 21:00:00\" }], \"city\": { \"id\": 1185241, \"name\": \"Dhaka\", \"coord\": { \"lat\": 23.7104, \"lon\": 90.4074 }, \"country\": \"BD\", \"population\": 10356500, \"timezone\": 21600, \"sunrise\": 1570578762, \"sunset\": 1570621118 } },\r\n            currentTemp: \"32\",\r\n            currentWeather: \"sunny\",\r\n            currentHumidity: \"60%\",\r\n            currentIcon: \"50d\",\r\n            metric: true,\r\n            country: \"BD\",\r\n            city: \"Dhaka\",\r\n            sunrise: \"05:00:00\",\r\n            sunset: \"17:00:00\",\r\n        };\r\n        this.handleUnitsChange = this.handleUnitsChange.bind(this);\r\n        this.getCurrentData = this.getCurrentData.bind(this);\r\n    };\r\n\r\n    UTX(dt) {\r\n        return (new Date(dt * 1000))\r\n    };\r\n\r\n    timefy(time) {\r\n        return (time < 10 ? \"0\" + time : time)\r\n    };\r\n\r\n\r\n    getCurrentData(URL) {\r\n\r\n        $.ajax({\r\n            url: URL,\r\n            dataType: 'json',\r\n            success: (data) => {\r\n                this.setState(state => {\r\n                    return {\r\n                        currentTemp: data.main.temp,\r\n                        currentWeather: data.weather[0].main,\r\n                        currentHumidity: data.main.humidity,\r\n                        currentIcon: data.weather[0].icon,\r\n                        country: data.sys.country,\r\n                        city: data.name,\r\n                        dt: data.dt,\r\n                        sunrise: this.timefy(this.UTX(data.sys.sunrise).getHours()) + \":\" + this.timefy(this.UTX(data.sys.sunrise).getMinutes()),\r\n                        sunset: this.timefy(this.UTX(data.sys.sunset).getHours()) + \":\" + this.timefy(this.UTX(data.sys.sunset).getMinutes())\r\n                    }\r\n                })\r\n            },\r\n            error: function(data) {\r\n                alert(\"failed to get data\");\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    getForecastData(URL) {\r\n        $.getJSON(URL, response => {\r\n            this.setState(state => {\r\n                return {\r\n                    forecast: response\r\n                }\r\n            })\r\n        });\r\n    };\r\n\r\n    handleUnitsChange() {\r\n        this.setState(state => {\r\n            return {\r\n                metric: !this.state.metric\r\n            }\r\n        })\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.timer = setInterval(() => {\r\n            let today = new Date();\r\n            let currentTime = this.timefy(today.getHours()) + \":\" + this.timefy(today.getMinutes()) + \":\" + this.timefy(today.getSeconds());\r\n            this.setState(state => {\r\n                return {\r\n                    time: currentTime\r\n                }\r\n            })\r\n        }, 1000);\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                pos => {\r\n                    let longitude = pos.coords.longitude;\r\n                    let latitude = pos.coords.latitude;\r\n                    let currentURL = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${weatherAPIKey}`;\r\n                    let forecastURL = `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=metric&appid=${weatherAPIKey}`;\r\n                    this.getCurrentData(currentURL);\r\n                    this.getForecastData(forecastURL);\r\n                },\r\n                err => {\r\n                    console.warn(`ERROR ${err.code}: ${err.message}`);\r\n                    let location = prompt(\"Please provide the name of your city followed by your country code, separated by a , (example: London,UK)\");\r\n                    let currentURL = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${weatherAPIKey}`;\r\n                    let forecastURL = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${weatherAPIKey}`;\r\n                    this.getCurrentData(currentURL);\r\n                    this.getForecastData(forecastURL);\r\n                }, {\r\n                    enableHighAccuracy: true,\r\n                    timeout: 5000,\r\n                    maximumAge: 0\r\n                }\r\n            );\r\n        } else {\r\n            let location = prompt(\"Please provide the name of your city followed by your country code, separated by a , (example: London,UK)\");\r\n            let currentURL = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${weatherAPIKey}`;\r\n            let forecastURL = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${weatherAPIKey}`;\r\n            this.getCurrentData(currentURL);\r\n            this.getForecastData(forecastURL);\r\n\r\n        };\r\n        document.querySelector(\".forecastHours\").style.border = \"0px\";\r\n    };\r\n\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n    render() {\r\n        const rain = \"https://images.pexels.com/photos/262212/pexels-photo-262212.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const fewClouds = \"https://images.pexels.com/photos/479333/pexels-photo-479333.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const overcast = \"https://images.pexels.com/photos/414659/pexels-photo-414659.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const clear = \"https://images.pexels.com/photos/281260/pexels-photo-281260.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\";\r\n        const rainNight = \"https://images.pexels.com/photos/2797487/pexels-photo-2797487.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const clearNight = \"https://images.pexels.com/photos/1564334/nature-sky-milky-way-galaxy-1564334.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const cloudsNight = \"https://images.pexels.com/photos/790181/pexels-photo-790181.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const thunderstorm = \"https://images.pexels.com/photos/904398/pexels-photo-904398.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const snow = \"https://images.pexels.com/photos/954710/pexels-photo-954710.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const snowNight = \"https://images.pexels.com/photos/280204/pexels-photo-280204.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const mist = \"https://images.pexels.com/photos/69825/sunbeam-fog-autumn-nature-69825.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        const mistNight = \"https://images.pexels.com/photos/327308/pexels-photo-327308.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n        let backgroundImage;\r\n        switch (this.state.currentIcon) {\r\n            case \"01d\":\r\n                backgroundImage = clear;\r\n                break;\r\n            case \"01n\":\r\n                backgroundImage = clearNight;\r\n                break;\r\n            case \"02d\":\r\n            case \"03d\":\r\n                backgroundImage = fewClouds;\r\n                break;\r\n            case \"03n\":\r\n            case \"02n\":\r\n                backgroundImage = cloudsNight;\r\n                break;\r\n            case \"04d\":\r\n            case \"04n\":\r\n                backgroundImage = overcast;\r\n                break;\r\n            case \"09d\":\r\n            case \"10d\":\r\n                backgroundImage = rain;\r\n                break;\r\n            case \"09n\":\r\n            case \"10n\":\r\n                backgroundImage = rainNight;\r\n                break;\r\n            case \"11d\":\r\n            case \"11n\":\r\n                backgroundImage = thunderstorm;\r\n                break;\r\n            case \"13d\":\r\n                backgroundImage = snow;\r\n                break;\r\n            case \"13n\":\r\n                backgroundImage = snowNight;\r\n                break;\r\n            case \"50d\":\r\n                backgroundImage = mist;\r\n                break;\r\n            case \"50n\":\r\n                backgroundImage = mistNight;\r\n                break;\r\n            default:\r\n                backgroundImage = clear;\r\n                break;\r\n        };\r\n\r\n        let style = { \"backgroundImage\": \"url('\" + backgroundImage + \"')\" };\r\n        return ( <\r\n            div > <\r\n            div id = \"page_wrapper\"\r\n            style = { style } >\r\n            <\r\n            div className = \"top_row\" >\r\n            <\r\n            div className = \"location_date\" >\r\n            <\r\n            City city = { this.state.country + \", \" + this.state.city }\r\n            /> <\r\n            DateTime dt = { this.state.dt }\r\n            UTX = { this.UTX }\r\n            timefy = { this.timefy }\r\n            />\r\n\r\n            <\r\n            /div>\r\n\r\n            <\r\n            /div>\r\n\r\n\r\n            <\r\n            Units handleUnitsChange = { this.handleUnitsChange }\r\n            /> <\r\n            CurrentWeather currentWeather = { this.state.currentWeather }\r\n            temp = { this.state.currentTemp }\r\n            metric = { this.state.metric }\r\n            humidity = { \"Humidity : \" + this.state.currentHumidity + \"%\" }\r\n            icon = {\r\n                \"https://openweathermap.org/img/wn/\" +\r\n                this.state.currentIcon +\r\n                \"@2x.png\"\r\n            }\r\n            clock = { this.state.time }\r\n            sunrise = { this.state.sunrise }\r\n            sunset = { this.state.sunset }\r\n            /> <\r\n            Forecast forecast = { this.state.forecast.list.slice(0, 8) }\r\n            metric = { this.state.metric }\r\n            UTX = { this.UTX }\r\n            timefy = { this.timefy }\r\n            /> < /\r\n            div > <\r\n            Footer /\r\n            >\r\n\r\n            <\r\n            /div>\r\n        );\r\n    }\r\n};\r\n\r\nclass CurrentWeather extends React.Component {\r\n    render() {\r\n        return ( <\r\n            div id = \"currentData\" >\r\n            <\r\n            div className = \"currentWeatherInfo\" >\r\n            <\r\n            div id = \"temp_now\" > { this.props.metric ? parseInt(this.props.temp) + \" \\xB0C\" : parseInt((this.props.temp * 9 / 5) + 32) + \" \\xB0F\" } < /div> <\r\n            div id = \"humidity_now\" > { this.props.humidity } < /div> < /\r\n            div > <\r\n            div id = \"clock_icon_wrapper\" >\r\n            <\r\n            div id = \"icon_now\" >\r\n            <\r\n            img id = \"icon_main\"\r\n            src = { this.props.icon }\r\n            alt = \"weather-icon\" / >\r\n            <\r\n            div id = \"condition_now\" > { this.props.currentWeather } < /div> < /\r\n            div > <\r\n            div id = \"clock\" >\r\n            <\r\n            div > { this.props.clock } < /div> <\r\n            div className = \"sunpos\" >\r\n            <\r\n            div className = \"sun-rise-set\"\r\n            id = \"sunrise\" > { this.props.sunrise } < /div> <\r\n            div className = \"sun-rise-set\"\r\n            id = \"sunset\" > { this.props.sunset } < /div> < /\r\n            div > <\r\n            /div>\r\n\r\n            <\r\n            /div> < /\r\n            div >\r\n        );\r\n    };\r\n};\r\n\r\nconst City = props => {\r\n    return ( <\r\n        div id = \"cityName\" >\r\n        <\r\n        h3 > { props.city } < /h3> < /\r\n        div >\r\n    );\r\n};\r\n\r\nconst DateTime = props => {\r\n    return ( <\r\n        div >\r\n        <\r\n        h3 > {\r\n            (props.UTX(props.dt)).toString().slice(0, 15)\r\n        } < /h3> < /\r\n        div >\r\n    )\r\n};\r\n\r\n\r\n\r\nclass Forecast extends React.Component {\r\n    render() {\r\n        return ( <\r\n            div id = \"forecastWrapper\" > {\r\n                this.props.forecast.map((item, index) =>\r\n                    ( < div key = { index }\r\n                        className = \"forecastHours\" > < div > { this.props.timefy(this.props.UTX(item.dt).getHours()) + \":\" + this.props.timefy(this.props.UTX(item.dt).getMinutes()) } < /div> <\r\n                        div className = \"for_temp\" > { this.props.metric ? parseInt(item.main.temp) + \" \\xB0C\" : parseInt((item.main.temp * 9 / 5) + 32) + \" \\xB0F\" } < /div>\r\n\r\n                        <\r\n                        div > < img src = { \"https://openweathermap.org/img/wn/\" + item.weather[0].icon + \".png\" }\r\n                        alt = \"weather-icon\" / > < /div> <\r\n                        div > { item.weather[0].description } < /div> < /\r\n                        div > ))\r\n            } <\r\n            /div>\r\n        )\r\n    };\r\n};\r\n\r\nconst Units = (props) => {\r\n    return ( <\r\n        div className = \"units\" >\r\n        <\r\n        h4 > {\r\n            '\\u00b0'\r\n        }\r\n        C < /h4>\r\n\r\n        <\r\n        label className = \"switch\" >\r\n\r\n        <\r\n        input type = \"checkbox\"\r\n        onClick = { props.handleUnitsChange }\r\n        /> <\r\n        span className = \"slider round\" > < /span>\r\n\r\n        <\r\n        /label> <\r\n        h4 > {\r\n            '\\u00b0'\r\n        }\r\n        F < /h4> < /\r\n        div >\r\n    )\r\n};\r\n\r\nconst Footer = () => {\r\n    return ( <\r\n        footer >\r\n        <\r\n        p > Weather data by < a href = \"https://openweathermap.org\" > Openweathermap < /a></p >\r\n        <\r\n        p > Sunrise and sunset icons made by < a href = \"https://www.flaticon.com/authors/freepik\" > Freepik < /a> from <a href=\"www.flaticon.com\">Flaticon.com</a > < /p> <\r\n        p > Background images under creative commons licence from < a href = \"www.pexels.com\" > Pexels.com < /a></p >\r\n        <\r\n        /footer>\r\n\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}